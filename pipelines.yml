template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: app_repo
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitProvider }}                      # <-- replace with your integration
      path: {{ .Values.repoPath }}    # <-- replace with your repository name
      branches:
        include: master

  - name: dev_build_output
    type: PropertyBag
    configuration:
      run_number: 1

  - name: test_results
    type: PropertyBag
    configuration:
      tests_passed: true

  - name: deploy_rb_version
    type: PropertyBag
    configuration:
      rb_version: 1

pipelines:
  - name: app_build_pipeline
    steps:
      - name: app_build
        type: Bash
        configuration:
          inputResources:
            - name: app_repo
            - name: docker_base_image
          runtime:
            type: image
            image:
              custom:
                name: $res_docker_base_image_imageName
                tag: $res_docker_base_image_imageTag
                registry: {{ .Values.artifactory }}
                sourceRepository: docker-local
                autoPull: true
          outputResources:
            - name: dev_build_output
        execution:
          onExecute:
            - echo "Hello world. This step will build your app"
            - write_output dev_build_output run_number=$run_number


  - name: app_test_pipeline
    steps:
      - name: app_test
        type: Bash
        configuration:
          inputResources:
            - name: dev_build_output
          outputResources:
            - name: test_results
        execution:
          onExecute:
            - echo "Hello world. This step will test your app"
            - odd=$(($run_number%2))
            - if [ "$odd" != 0 ]; then write_output test_results "tests_passed=false"; else write_output test_results "tests_passed=true"; fi

  - name: app_test_pipeline
    steps:
      - name: app_test
        type: Bash
        configuration:
          inputResources:
            - name: test_results
          outputResources:
            - name: deploy_artifact_version
        execution:
          onExecute:
            - echo "Hello world. This step will test your app"
            - write_output deploy_rb_version rb_version=$run_number
